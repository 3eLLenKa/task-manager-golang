version: "3.9"

services:
  api-service:
    build: ./api-gateway
    container_name: api
    ports:
      - "8080:8080"
    environment:
      CONFIG_PATH: /app/api-gateway/config/config.yaml
    depends_on:
      - db-service
      - kafka
      - redis

  db-service:
    build: ./db-service
    container_name: db-service
    ports:
      - "44044:44044"
    environment:
      CONFIG_PATH: /app/db-service/config/config.yaml
    depends_on:
      - postgres
      - redis

  redis:
    image: bitnami/redis:latest
    container_name: todo_cache
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"

  postgres:
    image: bitnami/postgresql:15
    container_name: postgres
    restart: always
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=task_manager
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/bitnami/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d task_manager"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: bitnami/migrate:latest
    container_name: migrate
    command: [
      "-path", "/migrations",
      "-database", "postgres://postgres:postgres@postgres:5432/task_manager?sslmode=disable",
      "up"
    ]
    volumes:
      - ./migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka

volumes:
  postgres_data:
  kafka_data:
